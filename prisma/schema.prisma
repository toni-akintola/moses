datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public"]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

model Education {
  id                  Int                @id @default(autoincrement())
  school              String
  degree              String
  endDate             String
  country             String
  city                String
  completed           Boolean
  ResumeSubmissions   ResumeSubmissions? @relation(fields: [resumeSubmissionsId], references: [id])
  resumeSubmissionsId Int?

  @@schema("public")
}

model Experience {
  id                  Int                @id @default(autoincrement())
  employer            String
  jobTitle            String
  city                String
  country             String
  startDate           String
  endDate             String
  duties              String
  ResumeSubmissions   ResumeSubmissions? @relation(fields: [resumeSubmissionsId], references: [id])
  resumeSubmissionsId Int?

  @@schema("public")
}

model Skill {
  id                  Int                @id @default(autoincrement())
  title               String
  ResumeSubmissions   ResumeSubmissions? @relation(fields: [resumeSubmissionsId], references: [id])
  resumeSubmissionsId Int?

  @@schema("public")
}

model Certificate {
  id                  Int                @id @default(autoincrement())
  title               String
  ResumeSubmissions   ResumeSubmissions? @relation(fields: [resumeSubmissionsId], references: [id])
  resumeSubmissionsId Int?

  @@schema("public")
}

model ResumeSubmissions {
  id                  Int           @id @default(autoincrement())
  age                 String
  name                String
  number              String
  email               String
  proficiency         String
  experiences         Experience[]
  educations          Education[]
  skills              Skill[]
  certificates        Certificate[]
  authorizationStatus String

  @@schema("public")
}

model Profiles {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("public")
}
